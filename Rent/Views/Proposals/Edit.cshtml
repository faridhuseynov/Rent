@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model Rent.ViewModels.ProposalViewModels.EditProposalDetailsViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>@localizer["EditHeadline"]</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            @if (Model.ProposalType.Type == "Rent")
            {
                <div class="form-group">
                    <label asp-for="ProposedPrice" class="control-label">@localizer["ProposedRentPriceLabel"]</label>
                    <input asp-for="ProposedPrice" class="form-control" min="1" placeholder="@localizer["propPirceInputPlaceholder"]" />
                    <span asp-validation-for="ProposedPrice" class="text-danger"></span>
                </div>
                <div class="date">
                    <div class="form-group">
                        <label>@localizer["RentStartLabel"]</label>
                        <input id="dp1" asp-for="ProposedRentStartDate" onchange="checkDate()" type="date" class="form-control clickable input-md" placeholder="&#xf133;  ay/gün/il">
                        <label class="text-danger" id="dp1ErrorSpan" hidden>@localizer["RentStartErrorText"]</label>
                    </div>
                    <div class="form-group">
                        <label>@localizer["RentEndLabel"]</label>
                        <input id="dp2" asp-for="ProposedRentEndDate" onchange="checkDate()" type="date" class="form-control clickable input-md" placeholder="&#xf133;  ay/gün/il">
                        <label class="text-danger" id="dp2ErrorSpan1" hidden>@localizer["RentEndLessStartError"]</label>
                        <label class="text-danger" id="dp2ErrorSpan2" hidden>@localizer["RentMinLendDaysError"]</label>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="ProposedPrice" class="control-label">@localizer["ProposedBuyPriceLabel"]</label>
                    <input asp-for="ProposedPrice" class="form-control" />
                    <span asp-validation-for="ProposedPrice" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                @*<label asp-for="ProposedAmount" class="control-label">@localizer["QuantityLabel", (Model.Product.TotalAmount - Model.Product.CurrentlyRented)]</label>
                    <input asp-for="ProposedAmount" class="form-control" min="1" max="@(Model.Product.TotalAmount-Model.Product.CurrentlyRented)" />*@
                <label asp-for="ProposedAmount" class="control-label">@localizer["QuantityLabel", (Model.Product.TotalAmount - Model.Product.CurrentlyRented)]</label>
                <input asp-for="ProposedAmount" class="form-control" min="1" max="@Model.ProposedAmount" />
                <span asp-validation-for="ProposedAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProposalMessage" class="control-label">testing</label>
                <textarea asp-for="ProposalMessage" class="form-control" rows="5"></textarea>
                <span asp-validation-for="ProposalMessage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input id="saveButton" type="submit" value="@localizer["SaveButtonText"]" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="OutgoingProposals" asp-route-userName="@User.Identity.Name">@localizer["BackButtonText"]</a>
</div>

@section Scripts{
    <script>
        function checkDate() {
            var startDate = (new Date($("#dp1").val())).getTime();
            var endDate = (new Date($("#dp2").val())).getTime() + 86400000;
            var minLendDays = @Model.Product.MinLendDays * 24 * 3600 * 1000;
            var check = true;
            if (startDate < Date.now()) {
                $("#dp1ErrorSpan").removeAttr("hidden");
                check = false;
            } else {
                $("#dp1ErrorSpan").attr("hidden", true);
            }
            if (startDate >= endDate) {
                $("#dp2ErrorSpan1").removeAttr("hidden");
                check = false;
            } else {
                $("#dp2ErrorSpan1").attr("hidden", true);
            }
            if (endDate - startDate < minLendDays) { // to check if difference is less than minLendDays
                $("#dp2ErrorSpan2").removeAttr("hidden");
                check = false;
            } else {
                $("#dp2ErrorSpan2").attr("hidden", true);
            }

            if (check == false) {
                $("#saveButton").addClass("disabled");
            } else {
                $("#saveButton").removeClass("disabled");
            }
        }
    </script>
}